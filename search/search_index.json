{
    "docs": [
        {
            "location": "/", 
            "text": "Qlik Machine Images (QMI)\n\n\nQMI is a tool for building environments in an automated reproducible way.  Using simple workflows environments are able to be started consistently and reliably, removing the time to build and keep environments up to date allowing the focus to be on the product, not the installation and configuration.\n\n\nPlease see the \nGetting Started\n page for further details.", 
            "title": "Home"
        }, 
        {
            "location": "/#qlik-machine-images-qmi", 
            "text": "QMI is a tool for building environments in an automated reproducible way.  Using simple workflows environments are able to be started consistently and reliably, removing the time to build and keep environments up to date allowing the focus to be on the product, not the installation and configuration.  Please see the  Getting Started  page for further details.", 
            "title": "Qlik Machine Images (QMI)"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting Started\n\n\nThe QMI getting started guide will walk you through the installation and configuration of the components that QMI utilises.\n\n\nQMI is built on the shoulders of industry leading and industry standard technologies and has been tested with Microsoft Windows, Apple OSX and various flavours of Linux (Ubuntu, CentOS).\n\n\nGetting the pre-requisites\n\n\nDownloads\n\n\n\n\nHashicorp Packer\n\n\nHashicorp Vagrant\n\n\nOracle VirtualBox\n\n\n\n\nNote: As these technologies are Open Source there can at times be incompatibilities between versions.  Be sure to review the documentation on these applications before upgrading.\n\n\nInstallation\n\n\nInstall the applications as per the documentation for each application.\n\n\nClone or download the Git repositories\n\n\n\n\nBase Operating System\n\n\nVagrant Scenarios\n\n\n\n\nInitialise the Shared-Content Folder\n\n\nThe shared-content folder contains all script modules that are used in the base QMI provided scenarios.\n\n\nLaunch your favourite terminal or PowerShell\n\n\ncd /qmi-scenarios\n./init-shared-content.sh", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "The QMI getting started guide will walk you through the installation and configuration of the components that QMI utilises.  QMI is built on the shoulders of industry leading and industry standard technologies and has been tested with Microsoft Windows, Apple OSX and various flavours of Linux (Ubuntu, CentOS).", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#getting-the-pre-requisites", 
            "text": "", 
            "title": "Getting the pre-requisites"
        }, 
        {
            "location": "/getting-started/#downloads", 
            "text": "Hashicorp Packer  Hashicorp Vagrant  Oracle VirtualBox   Note: As these technologies are Open Source there can at times be incompatibilities between versions.  Be sure to review the documentation on these applications before upgrading.", 
            "title": "Downloads"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "Install the applications as per the documentation for each application.", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#clone-or-download-the-git-repositories", 
            "text": "Base Operating System  Vagrant Scenarios", 
            "title": "Clone or download the Git repositories"
        }, 
        {
            "location": "/getting-started/#initialise-the-shared-content-folder", 
            "text": "The shared-content folder contains all script modules that are used in the base QMI provided scenarios.  Launch your favourite terminal or PowerShell  cd /qmi-scenarios\n./init-shared-content.sh", 
            "title": "Initialise the Shared-Content Folder"
        }, 
        {
            "location": "/packer/introduction/", 
            "text": "Introduction\n\n\nPacker is an open source tool for creating identical machine images for multiple platforms from a single source configuration. Packer is lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel. \n\n\nQMI uses Hashicorp Vagrant to use the machine image created by Packer.\n\n\nThese images are known as \"boxes\" in Vagrant, and specifying the box to use for your Vagrant environment is always the first step after creating a new Vagrantfile.  Box files are generated through another Hashicorp tool called Packer, and boxes can be created for most HyperVisors.  As QMI is VirtualBox focussed that will be the focus of this article.\n\n\nWhat you will need\n\n\n\n\nThe latest version of Packer \n\n\nA Windows Server 2016 ISO (This can be the evaluation edition),(The provided scripts are designed to work with Standard edition)\n\n\nA decent text editor\n\n\nBase Operating System\n repository\n\n\nSome knowledge about Packer, JSON and PowerShell\n\n\nTime, building a box takes hours\n\n\n\n\nqlik-base-os repository\n\n\nThe qlik-base-os repository contains the files necessary to create a blank Microsoft Windows 2016 Standard Oracle VirtualBox virtual machine.  \n\n\n\n\n\n\n\n\nFolder\n\n\nFile\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nanswer_files\n\n\nAutounattend.xml\n\n\nWindows unattended install template\n\n\n\n\n\n\nfloppy\n\n\nNA\n\n\nNot currently used\n\n\n\n\n\n\niso\n\n\nNA\n\n\nPlace the Windows 2016 iso download here\n\n\n\n\n\n\nscripts\n\n\nAll\n\n\nScripts that are executed during the creation of the virtual machine image\n\n\n\n\n\n\nroot\n\n\nvagrantfile-windows_2016.template\n\n\nVagrant file used to create the Vagrant box file\n\n\n\n\n\n\nroot\n\n\nWin2k16.json\n\n\nPacker configuration file\n\n\n\n\n\n\n\n\nPacker Worklow\n\n\n\n\n\n\n\n\n\n\nStep\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n1\n\n\nWindows 2016 iso file is used by the win2k16.json (Packer template)\n\n\n\n\n\n\n2\n\n\nA standard Windows Autounattend.xml file is used to configure and install Windows 2016 Server\n\n\n\n\n\n\n3\n\n\nScripts are executed by Packer and referenced by the win2k16.json file to determine what is created with the machine image\n\n\n\n\n\n\n4\n\n\nThe vagrant template specifies the default values to c reate as the output machine image (eg. Amount of RAM/Cores)\n\n\n\n\n\n\n5\n\n\nThe above files are used by the Packer JSON file (win2k16.json) to create the machine image\n\n\n\n\n\n\n6\n\n\nHashicorp Packer does all the lifting and outputs a Vagrant box file\n\n\n\n\n\n\n7\n\n\nThe output of packer is a Vagrant box (this will be added to Vagrant and be used as the base operating system)", 
            "title": "What is Packer"
        }, 
        {
            "location": "/packer/introduction/#introduction", 
            "text": "Packer is an open source tool for creating identical machine images for multiple platforms from a single source configuration. Packer is lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel.   QMI uses Hashicorp Vagrant to use the machine image created by Packer.  These images are known as \"boxes\" in Vagrant, and specifying the box to use for your Vagrant environment is always the first step after creating a new Vagrantfile.  Box files are generated through another Hashicorp tool called Packer, and boxes can be created for most HyperVisors.  As QMI is VirtualBox focussed that will be the focus of this article.", 
            "title": "Introduction"
        }, 
        {
            "location": "/packer/introduction/#what-you-will-need", 
            "text": "The latest version of Packer   A Windows Server 2016 ISO (This can be the evaluation edition),(The provided scripts are designed to work with Standard edition)  A decent text editor  Base Operating System  repository  Some knowledge about Packer, JSON and PowerShell  Time, building a box takes hours", 
            "title": "What you will need"
        }, 
        {
            "location": "/packer/introduction/#qlik-base-os-repository", 
            "text": "The qlik-base-os repository contains the files necessary to create a blank Microsoft Windows 2016 Standard Oracle VirtualBox virtual machine.       Folder  File  Description      answer_files  Autounattend.xml  Windows unattended install template    floppy  NA  Not currently used    iso  NA  Place the Windows 2016 iso download here    scripts  All  Scripts that are executed during the creation of the virtual machine image    root  vagrantfile-windows_2016.template  Vagrant file used to create the Vagrant box file    root  Win2k16.json  Packer configuration file", 
            "title": "qlik-base-os repository"
        }, 
        {
            "location": "/packer/introduction/#packer-worklow", 
            "text": "Step  Description      1  Windows 2016 iso file is used by the win2k16.json (Packer template)    2  A standard Windows Autounattend.xml file is used to configure and install Windows 2016 Server    3  Scripts are executed by Packer and referenced by the win2k16.json file to determine what is created with the machine image    4  The vagrant template specifies the default values to c reate as the output machine image (eg. Amount of RAM/Cores)    5  The above files are used by the Packer JSON file (win2k16.json) to create the machine image    6  Hashicorp Packer does all the lifting and outputs a Vagrant box file    7  The output of packer is a Vagrant box (this will be added to Vagrant and be used as the base operating system)", 
            "title": "Packer Worklow"
        }, 
        {
            "location": "/packer/building-the-image/", 
            "text": "Building the base machine image\n\n\nUpdating the Windows 2016 License information\n\n\n\n\nLaunch your text editor and open the qlik-base-os repository folder.\n\n\n\nOpen the Autounattend.xml file located in /answer_files/2016\n\n\nIt is recommended that you enter a valid Windows 2016 Server Standard edition license key (however it is possible to use an Evaluation version of Windows.  If an evaluation version is to be used skip this step. \n\n\nSearch for \nProductKey\n\n\n\n\nUncomment the key field and change the X's to be your license key\n\n\nSave the file\n\n\n\n\nGet the MD5 checksum value from the Windows 2016 ISO file\n\n\nYou will need to download a tool for this, use something like MD5SUM or if using Windows the \nMD5 Checksum Tool\n\n\n\n\nLaunch your terminal\n\n\nUse whatever MD5 checksum tool you have chosen to get the checksum\n\n\n\nCopy the checksum value into your clipboard\n\n\n\n\nUpdate the checksum value and the name of your Windows iso file\n\n\n\n\nFrom your text editor open the file /qlik-base-os/win2k16.json\n\n\nScroll to the bottom and find the variables section\n\n\n\nUpdate the iso file name in \niso_url\n\n\nUpdate the iso checksum in \niso_checksum\n\n\nSave the file\n\n\n\n\nStart the build\n\n\n\n\nLaunch your terminal\n\n\nBrowse to /qlik-base-os \n\n\nEnter \npacker build win2k16.json\n\n\nWait\n\n\nTo view the process open VirtualBox and launch the VM, you will see it progress through the various steps\n\n\nA file will be output at the end which is the Box file to be used in Vagrant", 
            "title": "Building the image"
        }, 
        {
            "location": "/packer/building-the-image/#building-the-base-machine-image", 
            "text": "", 
            "title": "Building the base machine image"
        }, 
        {
            "location": "/packer/building-the-image/#updating-the-windows-2016-license-information", 
            "text": "Launch your text editor and open the qlik-base-os repository folder.  Open the Autounattend.xml file located in /answer_files/2016  It is recommended that you enter a valid Windows 2016 Server Standard edition license key (however it is possible to use an Evaluation version of Windows.  If an evaluation version is to be used skip this step.   Search for  ProductKey   Uncomment the key field and change the X's to be your license key  Save the file", 
            "title": "Updating the Windows 2016 License information"
        }, 
        {
            "location": "/packer/building-the-image/#get-the-md5-checksum-value-from-the-windows-2016-iso-file", 
            "text": "You will need to download a tool for this, use something like MD5SUM or if using Windows the  MD5 Checksum Tool   Launch your terminal  Use whatever MD5 checksum tool you have chosen to get the checksum  Copy the checksum value into your clipboard", 
            "title": "Get the MD5 checksum value from the Windows 2016 ISO file"
        }, 
        {
            "location": "/packer/building-the-image/#update-the-checksum-value-and-the-name-of-your-windows-iso-file", 
            "text": "From your text editor open the file /qlik-base-os/win2k16.json  Scroll to the bottom and find the variables section  Update the iso file name in  iso_url  Update the iso checksum in  iso_checksum  Save the file", 
            "title": "Update the checksum value and the name of your Windows iso file"
        }, 
        {
            "location": "/packer/building-the-image/#start-the-build", 
            "text": "Launch your terminal  Browse to /qlik-base-os   Enter  packer build win2k16.json  Wait  To view the process open VirtualBox and launch the VM, you will see it progress through the various steps  A file will be output at the end which is the Box file to be used in Vagrant", 
            "title": "Start the build"
        }, 
        {
            "location": "/scenarios/introduction/", 
            "text": "Scenarios\n\n\nA scenario is a self contained machine image built for a purpose.  For example a Windows 2016 Server with Qlik Sense installed or a Windows 2016 Server with QlikView installed.\n\n\nThe following scenarios are provided through the repository \nqmi-scenarios\n\n\n\n\n\n\n\n\nScenario Name\n\n\nScenario Purpose\n\n\n\n\n\n\n\n\n\n\nqmi-qs-sn\n\n\nQlik Sense Single Node\n\n\n\n\n\n\nqmi-qv-ws\n\n\nQlikView Single Server with QlikView web server\n\n\n\n\n\n\nqmi-qs-aai\n\n\nQlik Sense with Advanced Analytics and R configured", 
            "title": "What are scenarios"
        }, 
        {
            "location": "/scenarios/introduction/#scenarios", 
            "text": "A scenario is a self contained machine image built for a purpose.  For example a Windows 2016 Server with Qlik Sense installed or a Windows 2016 Server with QlikView installed.  The following scenarios are provided through the repository  qmi-scenarios     Scenario Name  Scenario Purpose      qmi-qs-sn  Qlik Sense Single Node    qmi-qv-ws  QlikView Single Server with QlikView web server    qmi-qs-aai  Qlik Sense with Advanced Analytics and R configured", 
            "title": "Scenarios"
        }, 
        {
            "location": "/scenarios/anatomy-of-a-scenario/", 
            "text": "What makes a scenario\n\n\nFolder Structure\n\n\nQMI has been built to a set of standards to enable fast and efficient usage and creation of scenarios.  A scenarios folder structure should follow this standard.\n\n\n\n\nScenario Folder Name\n\n\nThis is the parent folder containing the scenario content.\n\n\nScenario.json\n\n\nVagrantfile\n\n\nReadme.md\n\n\nScripts\n\n\nFiles Folder", 
            "title": "Anatomy of a scenario"
        }, 
        {
            "location": "/scenarios/anatomy-of-a-scenario/#what-makes-a-scenario", 
            "text": "", 
            "title": "What makes a scenario"
        }, 
        {
            "location": "/scenarios/anatomy-of-a-scenario/#folder-structure", 
            "text": "QMI has been built to a set of standards to enable fast and efficient usage and creation of scenarios.  A scenarios folder structure should follow this standard.", 
            "title": "Folder Structure"
        }, 
        {
            "location": "/scenarios/anatomy-of-a-scenario/#scenario-folder-name", 
            "text": "This is the parent folder containing the scenario content.  Scenario.json  Vagrantfile  Readme.md  Scripts  Files Folder", 
            "title": "Scenario Folder Name"
        }, 
        {
            "location": "/scenarios/scenario-json/", 
            "text": "scenario.json file\n\n\nThis file contains information on the scenario. And is used during the creation of the virtual machine.\n\n\n\n\nDescription of scenario.json fields\n\n\n\n\nname: The name of the scenario\n\n\ndescription: Text to describe what the scenario contains\n\n\ncategory: Category of scenario\n\n\nplugin-dependencies: Description of the Vagrant plug-ins that are required to run the scenario\n\n\nnotes: Any information you wish to advise the user on\n\n\nversion: Version of the scenario\n\n\nauthor: Name of the Author\n\n\nemail: Email address\n\n\ndisabled: Currently not used\n\n\nqlik-default-binary: The Qlik software to use by default\n\n\nresoures: URLS to present at the end of provisioning to enable users to connect\n\n\nconfig\n\n\nallowUpdates: Currently not used\n\n\nServers\n\n\nname: The name that will be the hostname of the server\n\n\nip: the IP address to assign the server\n\n\nbox: the name of the Vagrant box to use\n\n\nmemory: Amount of RAM to allocate\n\n\ncpus: The number of cores to allocate\n\n\nsense\n\n\ncentral: if the server is a central node\n\n\nproxy: Currently not used\n\n\npersistence: Shared or Sync", 
            "title": "Scenario.json"
        }, 
        {
            "location": "/scenarios/scenario-json/#scenariojson-file", 
            "text": "This file contains information on the scenario. And is used during the creation of the virtual machine.", 
            "title": "scenario.json file"
        }, 
        {
            "location": "/scenarios/scenario-json/#description-of-scenariojson-fields", 
            "text": "name: The name of the scenario  description: Text to describe what the scenario contains  category: Category of scenario  plugin-dependencies: Description of the Vagrant plug-ins that are required to run the scenario  notes: Any information you wish to advise the user on  version: Version of the scenario  author: Name of the Author  email: Email address  disabled: Currently not used  qlik-default-binary: The Qlik software to use by default  resoures: URLS to present at the end of provisioning to enable users to connect  config  allowUpdates: Currently not used  Servers  name: The name that will be the hostname of the server  ip: the IP address to assign the server  box: the name of the Vagrant box to use  memory: Amount of RAM to allocate  cpus: The number of cores to allocate  sense  central: if the server is a central node  proxy: Currently not used  persistence: Shared or Sync", 
            "title": "Description of scenario.json fields"
        }, 
        {
            "location": "/scenarios/vagrantfile/", 
            "text": "Vagrantfile\n\n\nThis file is a simple set of instructions built in Ruby that tells QMI how and what to build. This file is used to create the scenario and configure the virtual machine.\n\n\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.require_version \n= 1.6.2\n\n\n# Relative path where 'shared-content' can be found\nsharedContentRelativePath = '../shared-content'\n\nrequire 'json'\n# Module dependency for custom VM values setup\nrequire File.dirname(__FILE__) + '/' + sharedContentRelativePath + '/scripts/custom-setup.rb'\n\n# Load scenario data configuration file\nscenario = JSON.parse(File.read(File.join(File.dirname(__FILE__), 'scenario.json')))\n# Overwrite of VM values (cpus, memory) from custom values setup in QMI client\nvals = CustomSetup.getValues( scenario )[\nservers\n][0]\n\n\n# Vagrant intialization\nVagrant.configure(\n2\n) do |config|\n\n    config.vm.define vals[\nname\n]\n    config.vm.box = vals[\nbox\n]\n    config.vm.network \nprivate_network\n, ip: vals[\nip\n]\n    config.vm.hostname = vals[\nname\n]\n\n    config.vm.provider :virtualbox do |v, override|\n        v.name = vals[\nname\n]\n        v.linked_clone = true\n        # v.customize ['setextradata', :id, 'GUI/ScaleFactor', '1.25']\n        v.customize [\nmodifyvm\n, :id, \n--memory\n, vals[\nmemory\n]]\n        v.customize [\nmodifyvm\n, :id, \n--cpus\n, vals[\ncpus\n]]\n        v.customize [\nmodifyvm\n, :id, \n--vram\n, 64]\n        v.customize [\nmodifyvm\n, :id, \n--clipboard\n, \nbidirectional\n]\n\n    end\n\n    # Shared synced folders setup (Host \n-\n Guest)\n    config.vm.synced_folder \n./files\n, \nc:/installation/\n\n    config.vm.synced_folder sharedContentRelativePath, \nc:/shared-content/\n\n\n    # Provision scripts execution\n    config.vm.provision :shell, path: sharedContentRelativePath + \n/scripts/modules/q-bootstrap.ps1\n\n    config.vm.provision :shell, path: \n./scripts/provisioner.ps1\n\n\nend", 
            "title": "Vagrantfile"
        }, 
        {
            "location": "/scenarios/vagrantfile/#vagrantfile", 
            "text": "This file is a simple set of instructions built in Ruby that tells QMI how and what to build. This file is used to create the scenario and configure the virtual machine.  # -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.require_version  = 1.6.2 \n\n# Relative path where 'shared-content' can be found\nsharedContentRelativePath = '../shared-content'\n\nrequire 'json'\n# Module dependency for custom VM values setup\nrequire File.dirname(__FILE__) + '/' + sharedContentRelativePath + '/scripts/custom-setup.rb'\n\n# Load scenario data configuration file\nscenario = JSON.parse(File.read(File.join(File.dirname(__FILE__), 'scenario.json')))\n# Overwrite of VM values (cpus, memory) from custom values setup in QMI client\nvals = CustomSetup.getValues( scenario )[ servers ][0]\n\n\n# Vagrant intialization\nVagrant.configure( 2 ) do |config|\n\n    config.vm.define vals[ name ]\n    config.vm.box = vals[ box ]\n    config.vm.network  private_network , ip: vals[ ip ]\n    config.vm.hostname = vals[ name ]\n\n    config.vm.provider :virtualbox do |v, override|\n        v.name = vals[ name ]\n        v.linked_clone = true\n        # v.customize ['setextradata', :id, 'GUI/ScaleFactor', '1.25']\n        v.customize [ modifyvm , :id,  --memory , vals[ memory ]]\n        v.customize [ modifyvm , :id,  --cpus , vals[ cpus ]]\n        v.customize [ modifyvm , :id,  --vram , 64]\n        v.customize [ modifyvm , :id,  --clipboard ,  bidirectional ]\n\n    end\n\n    # Shared synced folders setup (Host  -  Guest)\n    config.vm.synced_folder  ./files ,  c:/installation/ \n    config.vm.synced_folder sharedContentRelativePath,  c:/shared-content/ \n\n    # Provision scripts execution\n    config.vm.provision :shell, path: sharedContentRelativePath +  /scripts/modules/q-bootstrap.ps1 \n    config.vm.provision :shell, path:  ./scripts/provisioner.ps1 \n\nend", 
            "title": "Vagrantfile"
        }, 
        {
            "location": "/scenarios/readme-md/", 
            "text": "README.md\n\n\nA markdown text file where you'll find detailed information about what's in this scenario, software installed, author's comments, etc.\n\n\n# Qlik Sense single node\n## Description\nQlik Sense single server\n\n| Servername        | Server IP         | Purpose | \n|-------------------|-------------------|---------|\n| qmi-qs-sn       | 192.168.56.6    | Qlik Sense |\n\n## URLs\n| Name | URL | Purpose\n|------|-----|---------\n|QMC|http://qmi-qs-sn/qmc | QMC\n|hub|http://qmi-qs-sn/hub | hub\n\n## Users\n| Name | Password |\n|------|-----|\n|.\\qlik| Qlik1234|\n\n## Purpose\nThis scenario is a basic installation of Qlik Sense.\n\n## What is installed\n### Software\n1. Qlik Sense Server\n\n### Support Information\n| Author | Version | Date Published |\n|--------|---------|----------------|\n|Clint Carr|1.0|8 Aug 2017|", 
            "title": "Readme.md"
        }, 
        {
            "location": "/scenarios/readme-md/#readmemd", 
            "text": "A markdown text file where you'll find detailed information about what's in this scenario, software installed, author's comments, etc.  # Qlik Sense single node\n## Description\nQlik Sense single server\n\n| Servername        | Server IP         | Purpose | \n|-------------------|-------------------|---------|\n| qmi-qs-sn       | 192.168.56.6    | Qlik Sense |\n\n## URLs\n| Name | URL | Purpose\n|------|-----|---------\n|QMC|http://qmi-qs-sn/qmc | QMC\n|hub|http://qmi-qs-sn/hub | hub\n\n## Users\n| Name | Password |\n|------|-----|\n|.\\qlik| Qlik1234|\n\n## Purpose\nThis scenario is a basic installation of Qlik Sense.\n\n## What is installed\n### Software\n1. Qlik Sense Server\n\n### Support Information\n| Author | Version | Date Published |\n|--------|---------|----------------|\n|Clint Carr|1.0|8 Aug 2017|", 
            "title": "README.md"
        }, 
        {
            "location": "/scenarios/scripts/", 
            "text": "Scripts\n\n\nProvision scripts\nMost scenarios utilise shared scripts to reduce the amount of programming and maintenance.  Every script that supports use in multiple scenarios is stored in /shared-content/scripts/modules.\nAs an example of this reuse the Provisioner.ps1 from the Qlik Sense - Single Node can be evaluated.  These scripts can be reused in any scenario.\n\n\nNote:\n\n\nThe Shared-content folder is sourced from the \nqlik-automation-core\n repository that was initialised during the configuration of the environment.\n\n\nProvisioner.ps1 script\n\n\n c:\\shared-content\\scripts\\modules\\q-user-setup.ps1\n\n\n c:\\shared-content\\scripts\\modules\\qs-getBinary.ps1\n\n\n c:\\shared-content\\scripts\\modules\\qs-initial-cfg.ps1\n\n\n c:\\shared-content\\scripts\\modules\\qs-install.ps1\n\n\n c:\\shared-content\\scripts\\modules\\qs-post-cfg.ps1\n\n\n c:\\shared-content\\scripts\\modules\\qs-update.ps1\n\n\n c:\\shared-content\\scripts\\modules\\q-provisioned.ps1", 
            "title": "Provisioner Scripts"
        }, 
        {
            "location": "/scenarios/scripts/#scripts", 
            "text": "Provision scripts\nMost scenarios utilise shared scripts to reduce the amount of programming and maintenance.  Every script that supports use in multiple scenarios is stored in /shared-content/scripts/modules.\nAs an example of this reuse the Provisioner.ps1 from the Qlik Sense - Single Node can be evaluated.  These scripts can be reused in any scenario.", 
            "title": "Scripts"
        }, 
        {
            "location": "/scenarios/scripts/#note", 
            "text": "The Shared-content folder is sourced from the  qlik-automation-core  repository that was initialised during the configuration of the environment.", 
            "title": "Note:"
        }, 
        {
            "location": "/scenarios/scripts/#provisionerps1-script", 
            "text": "c:\\shared-content\\scripts\\modules\\q-user-setup.ps1  c:\\shared-content\\scripts\\modules\\qs-getBinary.ps1  c:\\shared-content\\scripts\\modules\\qs-initial-cfg.ps1  c:\\shared-content\\scripts\\modules\\qs-install.ps1  c:\\shared-content\\scripts\\modules\\qs-post-cfg.ps1  c:\\shared-content\\scripts\\modules\\qs-update.ps1  c:\\shared-content\\scripts\\modules\\q-provisioned.ps1", 
            "title": "Provisioner.ps1 script"
        }, 
        {
            "location": "/scenarios/files/", 
            "text": "Files Folder\n\n\nThe files folder should contain any files that you want to provision with the scenario.\nFor example the qmi-qs-sn (Qlik Machine Image \u2013 Qlik Sense \u2013 Single Node) scenario contains the following.\n\n\nThis folder will be shared with the guest virtual machine and can provide the provisioning scripts with content.\n\n\n\n\n\n\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\napps\n\n\nAny applications stored in this folder, or folders within this folder will be imported into Qlik Sense and published to the folder name.\n\n\n\n\n\n\nextensions\n\n\nAny extensions stored in this folder will be imported into Qlik Sense.\n\n\n\n\n\n\nqs-cfg.json\n\n\nThis file contains configuration information used in the provisioning of Qlik Sense.\n\n\n\n\n\n\nsp_config.xml\n\n\nThis XML file is used by the Qlik Sense installer to configure Shared Persistence.", 
            "title": "Files Folder"
        }, 
        {
            "location": "/scenarios/files/#files-folder", 
            "text": "The files folder should contain any files that you want to provision with the scenario.\nFor example the qmi-qs-sn (Qlik Machine Image \u2013 Qlik Sense \u2013 Single Node) scenario contains the following.  This folder will be shared with the guest virtual machine and can provide the provisioning scripts with content.     Name  Description      apps  Any applications stored in this folder, or folders within this folder will be imported into Qlik Sense and published to the folder name.    extensions  Any extensions stored in this folder will be imported into Qlik Sense.    qs-cfg.json  This file contains configuration information used in the provisioning of Qlik Sense.    sp_config.xml  This XML file is used by the Qlik Sense installer to configure Shared Persistence.", 
            "title": "Files Folder"
        }, 
        {
            "location": "/vagrant/introduction/", 
            "text": "What is Vagrant\n\n\nVagrant is a tool for building and managing virtual machine environments in a single workflow. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases production parity, and makes the \"works on my machine\" excuse a relic of the past.\n\n\nWhat you will need\n\n\n\n\nVagrant 2.0.1 or Vagrant 2.0.2 \n\n\nA built Vagrant Box \nBuilding the image\n\n\nA decent text editor\n\n\nSome knowledge about Packer, JSON and PowerShell", 
            "title": "What is Vagrant"
        }, 
        {
            "location": "/vagrant/introduction/#what-is-vagrant", 
            "text": "Vagrant is a tool for building and managing virtual machine environments in a single workflow. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases production parity, and makes the \"works on my machine\" excuse a relic of the past.", 
            "title": "What is Vagrant"
        }, 
        {
            "location": "/vagrant/introduction/#what-you-will-need", 
            "text": "Vagrant 2.0.1 or Vagrant 2.0.2   A built Vagrant Box  Building the image  A decent text editor  Some knowledge about Packer, JSON and PowerShell", 
            "title": "What you will need"
        }, 
        {
            "location": "/vagrant/getting-started/", 
            "text": "Getting Started\n\n\nAdd the Vagrant box to Vagrant\n\n\n\n\nLaunch your terminal or PowerShell if using Microsoft Windows\n\n\nBrowse to /qlik-base-os/\n\n\nFind the file \nWin2k16-virtualbox.box\n this is the output of building the base image from Packer\n\n\nEnter \nvagrant box add --name qlik/win2k16 win2k16-virtualbox.box\n\n\nEnter \nvagrant box list\n and ensure the \nqlik/win2k16\n box is present\n\n\n\nThis matches the value in the scenario.json file in the scenario folder\n\n\n\n\n\nUpdate the Qlik Licenses\n\n\n\n\nLaunch your text editor\n\n\nOpen the folder /qmi-scenarios/\n\n\nOpen the file /shared-content/licenses/qlik-license.json\n\n\n\nAdd the Qlik Licenses (at this stage only sense and qlikview are functional)\n\n\n\n\n{\n  \nsense\n: {\n    \nname\n: \nENTER_NAME_HERE\n,\n    \ncontrol\n: \nENTER_CONTROL_CODE_HERE\n,\n    \nserial\n: \nENTER_SERIAL_CODE_HERE\n,\n    \norganization\n: \nENTER_YOUR_ORG_NAME_HERE\n,\n    \nlef\n: \nQLIKSENSE_LEF_STRING_GOES_HERE\n\n  },\n  \nqap\n: {\n    \nname\n: \nENTER_NAME_HERE\n,\n    \ncontrol\n: \nENTER_CONTROL_CODE_HERE\n,\n    \nserial\n: \nENTER_SERIAL_CODE_HERE\n,\n    \norganization\n: \nENTER_YOUR_ORG_NAME_HERE\n\n  },\n  \nqlikview\n: {\n    \nname\n: \nENTER_NAME_HERE\n,\n    \ncontrol\n: \nENTER_CONTROL_CODE_HERE\n,\n    \nserial\n: \nENTER_SERIAL_CODE_HERE\n,\n    \norganization\n: \nENTER_YOUR_ORG_NAME_HERE\n\n  },\n  \ndatamarket\n: {\n    \nname\n: \nENTER_NAME_HERE\n,\n    \ncontrol\n : \nENTER_CONTROL_CODE_HERE\n,\n    \nserial\n: \nENTER_SERIAL_CODE_HERE\n,\n    \ntermsAcceptance\n: {},\n    \norganization\n: \nENTER_YOUR_ORG_NAME_HERE\n,\n    \nlef\n: \nDATAMARKET_LEF_STRING_GOES_HERE\n\n  }\n}\n\n\n\n\nQlik Version\n\n\nThe version of Qlik that is installed with the scenario is determined by the default-qlik-binary field in \nscenario.json\n.  This value updates the /shared-content/binaries/qver.json file.\n\n\nQlik Version Updates\n\n\nThe available versions to install are stored within /shared-content/binaries/qBinaryDownload.json.  This file needs to have the version and URL in order to download the entered version of Qlik Sense.\n\n\n{\n    \nqliksense\n: [\n        {\n            \nname\n: \nQlik Sense November 2017 Patch 1\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.24/1/_MSI/Qlik_Sense_update.exe\n,\n            \nurl2\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense November 2017\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense September 2017 Patch 1\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.14/1/_MSI/Qlik_Sense_update.exe\n,\n            \nurl2\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense September 2017\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense June 2017 Patch 3\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/3/_MSI/Qlik_Sense_update.exe\n,\n            \nurl2\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense June 2017 Patch 2\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/2/_MSI/Qlik_Sense_update.exe\n,\n            \nurl2\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense June 2017 Patch 1\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/1/_MSI/Qlik_Sense_update.exe\n,\n            \nurl2\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense June 2017\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense 3.2 SR5\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/3.2.5/205/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense 3.2 SR4\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/3.2.4/204/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense 3.2 SR3\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/3.2.3/203/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense 3.2 SR2\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/QlikSense/3.2.2/202/_MSI/Qlik_Sense_setup.exe\n\n        },\n        {\n            \nname\n: \nQlik Sense February 2018 pre-release\n,\n            \npreview\n: true,\n            \nurl\n: \nhttps://qmi.qlik.com/downloads/installers/Qlik_Sense_setup.exe\n\n        }\n    ],\n    \nqlikview\n: [\n        {\n            \nname\n: \nQlikView Server November 2017\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/qlikview/12.20/122020100/_MSI/QlikViewServer_x64Setup.exe\n\n        },\n        {\n            \nname\n: \nQlikView Server 12.10 SR8\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020600/_MSI/QlikViewServer_x64Setup.exe\n\n        },\n        {\n            \nname\n: \nQlikView Server 12.10 SR7\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020500/_MSI/QlikViewServer_x64Setup.exe\n\n        },\n        {\n            \nname\n: \nQlikView Server 11.20 SR17\n,\n            \nurl\n: \nhttps://da3hntz84uekx.cloudfront.net/qlikview/11.20/13607/_MSI/QlikViewServer_Win2012andUp.exe\n\n        }\n    ]\n}", 
            "title": "Getting Started"
        }, 
        {
            "location": "/vagrant/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/vagrant/getting-started/#add-the-vagrant-box-to-vagrant", 
            "text": "Launch your terminal or PowerShell if using Microsoft Windows  Browse to /qlik-base-os/  Find the file  Win2k16-virtualbox.box  this is the output of building the base image from Packer  Enter  vagrant box add --name qlik/win2k16 win2k16-virtualbox.box  Enter  vagrant box list  and ensure the  qlik/win2k16  box is present  This matches the value in the scenario.json file in the scenario folder", 
            "title": "Add the Vagrant box to Vagrant"
        }, 
        {
            "location": "/vagrant/getting-started/#update-the-qlik-licenses", 
            "text": "Launch your text editor  Open the folder /qmi-scenarios/  Open the file /shared-content/licenses/qlik-license.json  Add the Qlik Licenses (at this stage only sense and qlikview are functional)   {\n   sense : {\n     name :  ENTER_NAME_HERE ,\n     control :  ENTER_CONTROL_CODE_HERE ,\n     serial :  ENTER_SERIAL_CODE_HERE ,\n     organization :  ENTER_YOUR_ORG_NAME_HERE ,\n     lef :  QLIKSENSE_LEF_STRING_GOES_HERE \n  },\n   qap : {\n     name :  ENTER_NAME_HERE ,\n     control :  ENTER_CONTROL_CODE_HERE ,\n     serial :  ENTER_SERIAL_CODE_HERE ,\n     organization :  ENTER_YOUR_ORG_NAME_HERE \n  },\n   qlikview : {\n     name :  ENTER_NAME_HERE ,\n     control :  ENTER_CONTROL_CODE_HERE ,\n     serial :  ENTER_SERIAL_CODE_HERE ,\n     organization :  ENTER_YOUR_ORG_NAME_HERE \n  },\n   datamarket : {\n     name :  ENTER_NAME_HERE ,\n     control  :  ENTER_CONTROL_CODE_HERE ,\n     serial :  ENTER_SERIAL_CODE_HERE ,\n     termsAcceptance : {},\n     organization :  ENTER_YOUR_ORG_NAME_HERE ,\n     lef :  DATAMARKET_LEF_STRING_GOES_HERE \n  }\n}", 
            "title": "Update the Qlik Licenses"
        }, 
        {
            "location": "/vagrant/getting-started/#qlik-version", 
            "text": "The version of Qlik that is installed with the scenario is determined by the default-qlik-binary field in  scenario.json .  This value updates the /shared-content/binaries/qver.json file.", 
            "title": "Qlik Version"
        }, 
        {
            "location": "/vagrant/getting-started/#qlik-version-updates", 
            "text": "The available versions to install are stored within /shared-content/binaries/qBinaryDownload.json.  This file needs to have the version and URL in order to download the entered version of Qlik Sense.  {\n     qliksense : [\n        {\n             name :  Qlik Sense November 2017 Patch 1 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/1/_MSI/Qlik_Sense_update.exe ,\n             url2 :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense November 2017 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense September 2017 Patch 1 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/1/_MSI/Qlik_Sense_update.exe ,\n             url2 :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense September 2017 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense June 2017 Patch 3 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/3/_MSI/Qlik_Sense_update.exe ,\n             url2 :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense June 2017 Patch 2 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/2/_MSI/Qlik_Sense_update.exe ,\n             url2 :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense June 2017 Patch 1 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/1/_MSI/Qlik_Sense_update.exe ,\n             url2 :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense June 2017 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense 3.2 SR5 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.5/205/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense 3.2 SR4 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.4/204/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense 3.2 SR3 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.3/203/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense 3.2 SR2 ,\n             url :  https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.2/202/_MSI/Qlik_Sense_setup.exe \n        },\n        {\n             name :  Qlik Sense February 2018 pre-release ,\n             preview : true,\n             url :  https://qmi.qlik.com/downloads/installers/Qlik_Sense_setup.exe \n        }\n    ],\n     qlikview : [\n        {\n             name :  QlikView Server November 2017 ,\n             url :  https://da3hntz84uekx.cloudfront.net/qlikview/12.20/122020100/_MSI/QlikViewServer_x64Setup.exe \n        },\n        {\n             name :  QlikView Server 12.10 SR8 ,\n             url :  https://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020600/_MSI/QlikViewServer_x64Setup.exe \n        },\n        {\n             name :  QlikView Server 12.10 SR7 ,\n             url :  https://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020500/_MSI/QlikViewServer_x64Setup.exe \n        },\n        {\n             name :  QlikView Server 11.20 SR17 ,\n             url :  https://da3hntz84uekx.cloudfront.net/qlikview/11.20/13607/_MSI/QlikViewServer_Win2012andUp.exe \n        }\n    ]\n}", 
            "title": "Qlik Version Updates"
        }, 
        {
            "location": "/vagrant/launch-scenario/", 
            "text": "Launching a scenario\n\n\n\n\nOpen your terminal or PowerShell if using Microsoft Windows\n\n\nBrowse to the scenario you want to start (eg. /qmi-scenarios/qmi-qs-sn)\n\n\nEnter \nvagrant up\n\n\n\n\nWatch the progress (depending on machine this process should take approximately 10 minutes)\n\n\nCheck for any error's or warnings during the provisioning process", 
            "title": "Launch Scenario"
        }, 
        {
            "location": "/vagrant/launch-scenario/#launching-a-scenario", 
            "text": "Open your terminal or PowerShell if using Microsoft Windows  Browse to the scenario you want to start (eg. /qmi-scenarios/qmi-qs-sn)  Enter  vagrant up   Watch the progress (depending on machine this process should take approximately 10 minutes)  Check for any error's or warnings during the provisioning process", 
            "title": "Launching a scenario"
        }, 
        {
            "location": "/faq/", 
            "text": "Can I change the location virtual machines are stored?\n    Yes, this is set within virtualbox preferences. The default location is:\n\n\nWindows: C:\\Users\\USERNAME\\VirtualBox VMs\n\n\nMac OS X and Linux: ~/VirtualBox VMs\n\n\n\n\n\n\n\n\nCan I change the location where box files are located?\n    The environment variable VAGRANT_HOME can be set to change the directory where Vagrant stores global state. By default, this is set to ~/.vagrant.d. The Vagrant home directory is where things such as boxes are stored, so it can actually become quite large on disk.\n\n\nUsually this location is by default set to:\n\n Windows: C:/Users/USERNAME/.vagrant.d/boxes\n\n Mac OS X and Linux: ~/.vagrant.d/boxes\n* How many machines I can have 'RUNNING' at the same time?\nIt really depends on the size of your local machine. The more RAM you've got the bigger the number of Qlik Machines you can run at the same time (in RUNNING state). It's recommended not have more than 3/4 as an average. However, you can have as many as you like if they are SUSPENDED or POWEROFF.\n\n\n\n\n\n\nI want to access Windows of a specific scenario, how do I do it?\n    You can only access Windows for already provisioned scenarios.\n    Open VirtualBox application and double click on the virtual machine you like to access. You'll access Windows logged-in as 'vagrant' user.\n\n\n\n\n\n\nQMI seems to take quite a lot of disk space!, what should I do?\n    FAQ 1 an 2 help you change location where Qlik Machines and boxes are stored.\n\n\n\n\n\n\nVT-x is disabled in BIOS.\n    If you get an error saying \"VT-x is disabled in BIOS\" (or similar) that means Virtualization Technologies are disabled in your machine and you won't be able to run virtual machines in it.\n\n\nYou can change this setting by entering BIOS at reboot. If you don't feel confident enough to change this setting yourself, please contact IT.\n\n\n\n\n\n\nShould I let Virtualbox or Vagrant updates?\n    The important thing to check is compatibility between VirtualBox and Vagrant.\n\n\n\n\nVagrant 2.0.2\n\n\nVirtualBox 5.1.26\nUpdating or using newer versions shouldn't break QMI but do so at your risk, :-)\n\n\n\n\n\n\n\n\nError while provision: The \u2018reload\u2019 provisioner could not be found\n    Some scenarios need specific plugins to be installed prior provision. To list current installed plugins, type the following on a terminal window.\n\n\nvagrant plugin list\nMake sure vagrant-reload, reload, vagrant-windows-sysprep and vagrant-disksize are on the list. If any of them doesn't show up type the following to install:\n\n\nvagrant plugin install vagrant-reload reload vagrant-windows-sysprep vagrant-disksize\nIt may also rarely happen while installation of plugins you end up getting errors resolving dependencies. This command re-installs all current installed plugins resolving those dependencies:\n\n\nvagrant plugin expunge --reinstall", 
            "title": "FAQ"
        }
    ]
}