{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Qlik Machine Images (QMI) QMI is a tool for building environments in an automated reproducible way. Using simple workflows environments are able to be started consistently and reliably, removing the time to build and keep environments up to date allowing the focus to be on the product, not the installation and configuration. Please see the Getting Started page for further details.","title":"Home"},{"location":"#qlik-machine-images-qmi","text":"QMI is a tool for building environments in an automated reproducible way. Using simple workflows environments are able to be started consistently and reliably, removing the time to build and keep environments up to date allowing the focus to be on the product, not the installation and configuration. Please see the Getting Started page for further details.","title":"Qlik Machine Images (QMI)"},{"location":"faq/","text":"Can I change the location virtual machines are stored? Yes, this is set within virtualbox preferences. The default location is: Windows: C:\\Users\\USERNAME\\VirtualBox VMs Mac OS X and Linux: ~/VirtualBox VMs Can I change the location where box files are located? The environment variable VAGRANT_HOME can be set to change the directory where Vagrant stores global state. By default, this is set to ~/.vagrant.d. The Vagrant home directory is where things such as boxes are stored, so it can actually become quite large on disk. Usually this location is by default set to: * Windows: C:/Users/USERNAME/.vagrant.d/boxes * Mac OS X and Linux: ~/.vagrant.d/boxes * How many machines I can have 'RUNNING' at the same time? It really depends on the size of your local machine. The more RAM you've got the bigger the number of Qlik Machines you can run at the same time (in RUNNING state). It's recommended not have more than 3/4 as an average. However, you can have as many as you like if they are SUSPENDED or POWEROFF. I want to access Windows of a specific scenario, how do I do it? You can only access Windows for already provisioned scenarios. Open VirtualBox application and double click on the virtual machine you like to access. You'll access Windows logged-in as 'vagrant' user. QMI seems to take quite a lot of disk space!, what should I do? FAQ 1 an 2 help you change location where Qlik Machines and boxes are stored. VT-x is disabled in BIOS. If you get an error saying \"VT-x is disabled in BIOS\" (or similar) that means Virtualization Technologies are disabled in your machine and you won't be able to run virtual machines in it. You can change this setting by entering BIOS at reboot. If you don't feel confident enough to change this setting yourself, please contact IT. Should I let Virtualbox or Vagrant updates? The important thing to check is compatibility between VirtualBox and Vagrant. Vagrant 2.0.2 VirtualBox 5.1.26 Updating or using newer versions shouldn't break QMI but do so at your risk, :-) Error while provision: The \u2018reload\u2019 provisioner could not be found Some scenarios need specific plugins to be installed prior provision. To list current installed plugins, type the following on a terminal window. vagrant plugin list Make sure vagrant-reload, reload, vagrant-windows-sysprep and vagrant-disksize are on the list. If any of them doesn't show up type the following to install: vagrant plugin install vagrant-reload reload vagrant-windows-sysprep vagrant-disksize It may also rarely happen while installation of plugins you end up getting errors resolving dependencies. This command re-installs all current installed plugins resolving those dependencies: vagrant plugin expunge --reinstall","title":"FAQ"},{"location":"getting-started/","text":"Getting Started The QMI getting started guide will walk you through the installation and configuration of the components that QMI utilises. QMI is built on the shoulders of industry leading and industry standard technologies and has been tested with Microsoft Windows, Apple OSX and various flavours of Linux (Ubuntu, CentOS). Getting the pre-requisites Downloads Hashicorp Packer Hashicorp Vagrant Oracle VirtualBox Note: As these technologies are Open Source there can at times be incompatibilities between versions. Be sure to review the documentation on these applications before upgrading. Installation Install the applications as per the documentation for each application. Clone or download the Git repositories Base Operating System Vagrant QMI scenarios Initialise the Shared-Content folder for QMI scenarios The shared-content folder contains all script modules that are used in the base QMI provided scenarios. Launch your favourite terminal or PowerShell and enter cd /qmi-scenarios ./init-shared-content.sh","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"The QMI getting started guide will walk you through the installation and configuration of the components that QMI utilises. QMI is built on the shoulders of industry leading and industry standard technologies and has been tested with Microsoft Windows, Apple OSX and various flavours of Linux (Ubuntu, CentOS).","title":"Getting Started"},{"location":"getting-started/#getting-the-pre-requisites","text":"","title":"Getting the pre-requisites"},{"location":"getting-started/#downloads","text":"Hashicorp Packer Hashicorp Vagrant Oracle VirtualBox Note: As these technologies are Open Source there can at times be incompatibilities between versions. Be sure to review the documentation on these applications before upgrading.","title":"Downloads"},{"location":"getting-started/#installation","text":"Install the applications as per the documentation for each application.","title":"Installation"},{"location":"getting-started/#clone-or-download-the-git-repositories","text":"Base Operating System Vagrant QMI scenarios","title":"Clone or download the Git repositories"},{"location":"getting-started/#initialise-the-shared-content-folder-for-qmi-scenarios","text":"The shared-content folder contains all script modules that are used in the base QMI provided scenarios. Launch your favourite terminal or PowerShell and enter cd /qmi-scenarios ./init-shared-content.sh","title":"Initialise the Shared-Content folder for QMI scenarios"},{"location":"packer/building-the-image/","text":"Building the base machine image Updating the Windows 2016 License information Launch your text editor and open the qlik-base-os repository folder. Open the Autounattend.xml file located in /answer_files/2016 It is recommended that you enter a valid Windows 2016 Server Standard edition license key (however it is possible to use an Evaluation version of Windows. If an evaluation version is to be used skip this step. Search for ProductKey Uncomment the key field and change the X's to be your license key Save the file Get the MD5 checksum value from the Windows 2016 ISO file You will need to download a tool for this, use something like MD5SUM or if using Windows the MD5 Checksum Tool Launch your terminal Use whatever MD5 checksum tool you have chosen to get the checksum Copy the checksum value into your clipboard Update the checksum value and the name of your Windows iso file From your text editor open the file /qlik-base-os/win2k16.json Scroll to the bottom and find the variables section Update the iso file name in iso_url Update the iso checksum in iso_checksum Save the file Start the build Launch your terminal Browse to /qlik-base-os Enter packer build win2k16.json Wait To view the process open VirtualBox and launch the VM, you will see it progress through the various steps A file will be output at the end which is the Box file to be used in Vagrant","title":"Building the image"},{"location":"packer/building-the-image/#building-the-base-machine-image","text":"","title":"Building the base machine image"},{"location":"packer/building-the-image/#updating-the-windows-2016-license-information","text":"Launch your text editor and open the qlik-base-os repository folder. Open the Autounattend.xml file located in /answer_files/2016 It is recommended that you enter a valid Windows 2016 Server Standard edition license key (however it is possible to use an Evaluation version of Windows. If an evaluation version is to be used skip this step. Search for ProductKey Uncomment the key field and change the X's to be your license key Save the file","title":"Updating the Windows 2016 License information"},{"location":"packer/building-the-image/#get-the-md5-checksum-value-from-the-windows-2016-iso-file","text":"You will need to download a tool for this, use something like MD5SUM or if using Windows the MD5 Checksum Tool Launch your terminal Use whatever MD5 checksum tool you have chosen to get the checksum Copy the checksum value into your clipboard","title":"Get the MD5 checksum value from the Windows 2016 ISO file"},{"location":"packer/building-the-image/#update-the-checksum-value-and-the-name-of-your-windows-iso-file","text":"From your text editor open the file /qlik-base-os/win2k16.json Scroll to the bottom and find the variables section Update the iso file name in iso_url Update the iso checksum in iso_checksum Save the file","title":"Update the checksum value and the name of your Windows iso file"},{"location":"packer/building-the-image/#start-the-build","text":"Launch your terminal Browse to /qlik-base-os Enter packer build win2k16.json Wait To view the process open VirtualBox and launch the VM, you will see it progress through the various steps A file will be output at the end which is the Box file to be used in Vagrant","title":"Start the build"},{"location":"packer/introduction/","text":"Introduction Packer is an open source tool for creating identical machine images for multiple platforms from a single source configuration. Packer is lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel. QMI uses Hashicorp Vagrant to use the machine image created by Packer. These images are known as \"boxes\" in Vagrant, and specifying the box to use for your Vagrant environment is always the first step after creating a new Vagrantfile. Box files are generated through another Hashicorp tool called Packer, and boxes can be created for most HyperVisors. As QMI is VirtualBox focussed that will be the focus of this article. What you will need The latest version of Packer A Windows Server 2016 ISO (This can be the evaluation edition),(The provided scripts are designed to work with Standard edition) A decent text editor Base Operating System repository Some knowledge about Packer, JSON and PowerShell Time, building a box takes hours qlik-base-os repository The qlik-base-os repository contains the files necessary to create a blank Microsoft Windows 2016 Standard Oracle VirtualBox virtual machine. Folder File Description answer_files Autounattend.xml Windows unattended install template floppy NA Not currently used iso NA Place the Windows 2016 iso download here scripts All Scripts that are executed during the creation of the virtual machine image root vagrantfile-windows_2016.template Vagrant file used to create the Vagrant box file root Win2k16.json Packer configuration file Packer Worklow Step Description 1 Windows 2016 iso file is used by the win2k16.json (Packer template) 2 A standard Windows Autounattend.xml file is used to configure and install Windows 2016 Server 3 Scripts are executed by Packer and referenced by the win2k16.json file to determine what is created with the machine image 4 The vagrant template specifies the default values to c reate as the output machine image (eg. Amount of RAM/Cores) 5 The above files are used by the Packer JSON file (win2k16.json) to create the machine image 6 Hashicorp Packer does all the lifting and outputs a Vagrant box file 7 The output of packer is a Vagrant box (this will be added to Vagrant and be used as the base operating system)","title":"What is Packer"},{"location":"packer/introduction/#introduction","text":"Packer is an open source tool for creating identical machine images for multiple platforms from a single source configuration. Packer is lightweight, runs on every major operating system, and is highly performant, creating machine images for multiple platforms in parallel. QMI uses Hashicorp Vagrant to use the machine image created by Packer. These images are known as \"boxes\" in Vagrant, and specifying the box to use for your Vagrant environment is always the first step after creating a new Vagrantfile. Box files are generated through another Hashicorp tool called Packer, and boxes can be created for most HyperVisors. As QMI is VirtualBox focussed that will be the focus of this article.","title":"Introduction"},{"location":"packer/introduction/#what-you-will-need","text":"The latest version of Packer A Windows Server 2016 ISO (This can be the evaluation edition),(The provided scripts are designed to work with Standard edition) A decent text editor Base Operating System repository Some knowledge about Packer, JSON and PowerShell Time, building a box takes hours","title":"What you will need"},{"location":"packer/introduction/#qlik-base-os-repository","text":"The qlik-base-os repository contains the files necessary to create a blank Microsoft Windows 2016 Standard Oracle VirtualBox virtual machine. Folder File Description answer_files Autounattend.xml Windows unattended install template floppy NA Not currently used iso NA Place the Windows 2016 iso download here scripts All Scripts that are executed during the creation of the virtual machine image root vagrantfile-windows_2016.template Vagrant file used to create the Vagrant box file root Win2k16.json Packer configuration file","title":"qlik-base-os repository"},{"location":"packer/introduction/#packer-worklow","text":"Step Description 1 Windows 2016 iso file is used by the win2k16.json (Packer template) 2 A standard Windows Autounattend.xml file is used to configure and install Windows 2016 Server 3 Scripts are executed by Packer and referenced by the win2k16.json file to determine what is created with the machine image 4 The vagrant template specifies the default values to c reate as the output machine image (eg. Amount of RAM/Cores) 5 The above files are used by the Packer JSON file (win2k16.json) to create the machine image 6 Hashicorp Packer does all the lifting and outputs a Vagrant box file 7 The output of packer is a Vagrant box (this will be added to Vagrant and be used as the base operating system)","title":"Packer Worklow"},{"location":"scenarios/anatomy-of-a-scenario/","text":"What makes a scenario Folder Structure QMI has been built to a set of standards to enable fast and efficient usage and creation of scenarios. A scenarios folder structure should follow this standard. Scenario Folder Name This is the parent folder containing the scenario content. Scenario.json Vagrantfile Readme.md Scripts Files Folder","title":"Anatomy of a scenario"},{"location":"scenarios/anatomy-of-a-scenario/#what-makes-a-scenario","text":"","title":"What makes a scenario"},{"location":"scenarios/anatomy-of-a-scenario/#folder-structure","text":"QMI has been built to a set of standards to enable fast and efficient usage and creation of scenarios. A scenarios folder structure should follow this standard.","title":"Folder Structure"},{"location":"scenarios/anatomy-of-a-scenario/#scenario-folder-name","text":"This is the parent folder containing the scenario content. Scenario.json Vagrantfile Readme.md Scripts Files Folder","title":"Scenario Folder Name"},{"location":"scenarios/files/","text":"Files Folder The files folder should contain any files that you want to provision with the scenario. For example the qmi-qs-sn (Qlik Machine Image \u2013 Qlik Sense \u2013 Single Node) scenario contains the following. This folder will be shared with the guest virtual machine and can provide the provisioning scripts with content. Name Description apps Any applications stored in this folder, or folders within this folder will be imported into Qlik Sense and published to the folder name. extensions Any extensions stored in this folder will be imported into Qlik Sense. qs-cfg.json This file contains configuration information used in the provisioning of Qlik Sense. sp_config.xml This XML file is used by the Qlik Sense installer to configure Shared Persistence.","title":"Files Folder"},{"location":"scenarios/files/#files-folder","text":"The files folder should contain any files that you want to provision with the scenario. For example the qmi-qs-sn (Qlik Machine Image \u2013 Qlik Sense \u2013 Single Node) scenario contains the following. This folder will be shared with the guest virtual machine and can provide the provisioning scripts with content. Name Description apps Any applications stored in this folder, or folders within this folder will be imported into Qlik Sense and published to the folder name. extensions Any extensions stored in this folder will be imported into Qlik Sense. qs-cfg.json This file contains configuration information used in the provisioning of Qlik Sense. sp_config.xml This XML file is used by the Qlik Sense installer to configure Shared Persistence.","title":"Files Folder"},{"location":"scenarios/introduction/","text":"Scenarios A scenario is a self contained machine image built for a purpose. For example a Windows 2016 Server with Qlik Sense installed or a Windows 2016 Server with QlikView installed. The following scenarios are provided through the repository qmi-scenarios Scenario Name Scenario Purpose qmi-qs-sn Qlik Sense Enterprise for Windows Single Node qmi-qv-ws QlikView Single Server with QlikView web server qmi-qs-aai Qlik Sense with Advanced Analytics and R configured qmi-qseok-minikube Qlik Sense Enterprise on Kubernetes (Minikube)","title":"What are scenarios"},{"location":"scenarios/introduction/#scenarios","text":"A scenario is a self contained machine image built for a purpose. For example a Windows 2016 Server with Qlik Sense installed or a Windows 2016 Server with QlikView installed. The following scenarios are provided through the repository qmi-scenarios Scenario Name Scenario Purpose qmi-qs-sn Qlik Sense Enterprise for Windows Single Node qmi-qv-ws QlikView Single Server with QlikView web server qmi-qs-aai Qlik Sense with Advanced Analytics and R configured qmi-qseok-minikube Qlik Sense Enterprise on Kubernetes (Minikube)","title":"Scenarios"},{"location":"scenarios/readme-md/","text":"README.md A markdown text file where you'll find detailed information about what's in this scenario, software installed, author's comments, etc. # Qlik Sense single node ## Description Qlik Sense single server | Servername | Server IP | Purpose | |-------------------|-------------------|---------| | qmi-qs-sn | 192.168.56.6 | Qlik Sense | ## URLs | Name | URL | Purpose |------|-----|--------- |QMC|http://qmi-qs-sn/qmc | QMC |hub|http://qmi-qs-sn/hub | hub ## Users | Name | Password | |------|-----| |.\\qlik| Qlik1234| ## Purpose This scenario is a basic installation of Qlik Sense. ## What is installed ### Software 1. Qlik Sense Server ### Support Information | Author | Version | Date Published | |--------|---------|----------------| |Clint Carr|1.0|8 Aug 2017|","title":"Readme.md"},{"location":"scenarios/readme-md/#readmemd","text":"A markdown text file where you'll find detailed information about what's in this scenario, software installed, author's comments, etc. # Qlik Sense single node ## Description Qlik Sense single server | Servername | Server IP | Purpose | |-------------------|-------------------|---------| | qmi-qs-sn | 192.168.56.6 | Qlik Sense | ## URLs | Name | URL | Purpose |------|-----|--------- |QMC|http://qmi-qs-sn/qmc | QMC |hub|http://qmi-qs-sn/hub | hub ## Users | Name | Password | |------|-----| |.\\qlik| Qlik1234| ## Purpose This scenario is a basic installation of Qlik Sense. ## What is installed ### Software 1. Qlik Sense Server ### Support Information | Author | Version | Date Published | |--------|---------|----------------| |Clint Carr|1.0|8 Aug 2017|","title":"README.md"},{"location":"scenarios/scenario-json/","text":"scenario.json file This file contains information on the scenario. And is used during the creation of the virtual machine. Description of scenario.json fields name: The name of the scenario description: Text to describe what the scenario contains category: Category of scenario plugin-dependencies: Description of the Vagrant plug-ins that are required to run the scenario notes: Any information you wish to advise the user on version: Version of the scenario author: Name of the Author email: Email address disabled: Currently not used qlik-default-binary: The Qlik software to use by default resoures: URLS to present at the end of provisioning to enable users to connect config allowUpdates: Currently not used Servers name: The name that will be the hostname of the server ip: the IP address to assign the server box: the name of the Vagrant box to use memory: Amount of RAM to allocate cpus: The number of cores to allocate sense central: if the server is a central node proxy: Currently not used persistence: Shared or Sync","title":"Scenario.json"},{"location":"scenarios/scenario-json/#scenariojson-file","text":"This file contains information on the scenario. And is used during the creation of the virtual machine.","title":"scenario.json file"},{"location":"scenarios/scenario-json/#description-of-scenariojson-fields","text":"name: The name of the scenario description: Text to describe what the scenario contains category: Category of scenario plugin-dependencies: Description of the Vagrant plug-ins that are required to run the scenario notes: Any information you wish to advise the user on version: Version of the scenario author: Name of the Author email: Email address disabled: Currently not used qlik-default-binary: The Qlik software to use by default resoures: URLS to present at the end of provisioning to enable users to connect config allowUpdates: Currently not used Servers name: The name that will be the hostname of the server ip: the IP address to assign the server box: the name of the Vagrant box to use memory: Amount of RAM to allocate cpus: The number of cores to allocate sense central: if the server is a central node proxy: Currently not used persistence: Shared or Sync","title":"Description of scenario.json fields"},{"location":"scenarios/scripts/","text":"Scripts Provision scripts Most scenarios utilise shared scripts to reduce the amount of programming and maintenance. Every script that supports use in multiple scenarios is stored in /shared-content/scripts/modules. As an example of this reuse the Provisioner.ps1 from the Qlik Sense - Single Node can be evaluated. These scripts can be reused in any scenario. Note: The Shared-content folder is sourced from the qlik-automation-core repository that was initialised during the configuration of the environment. Provisioner.ps1 script c:\\shared-content\\scripts\\modules\\q-user-setup.ps1 c:\\shared-content\\scripts\\modules\\qs-getBinary.ps1 c:\\shared-content\\scripts\\modules\\qs-initial-cfg.ps1 c:\\shared-content\\scripts\\modules\\qs-install.ps1 c:\\shared-content\\scripts\\modules\\qs-post-cfg.ps1 c:\\shared-content\\scripts\\modules\\qs-update.ps1 c:\\shared-content\\scripts\\modules\\q-provisioned.ps1","title":"Provisioner Scripts"},{"location":"scenarios/scripts/#scripts","text":"Provision scripts Most scenarios utilise shared scripts to reduce the amount of programming and maintenance. Every script that supports use in multiple scenarios is stored in /shared-content/scripts/modules. As an example of this reuse the Provisioner.ps1 from the Qlik Sense - Single Node can be evaluated. These scripts can be reused in any scenario.","title":"Scripts"},{"location":"scenarios/scripts/#note","text":"The Shared-content folder is sourced from the qlik-automation-core repository that was initialised during the configuration of the environment.","title":"Note:"},{"location":"scenarios/scripts/#provisionerps1-script","text":"c:\\shared-content\\scripts\\modules\\q-user-setup.ps1 c:\\shared-content\\scripts\\modules\\qs-getBinary.ps1 c:\\shared-content\\scripts\\modules\\qs-initial-cfg.ps1 c:\\shared-content\\scripts\\modules\\qs-install.ps1 c:\\shared-content\\scripts\\modules\\qs-post-cfg.ps1 c:\\shared-content\\scripts\\modules\\qs-update.ps1 c:\\shared-content\\scripts\\modules\\q-provisioned.ps1","title":"Provisioner.ps1 script"},{"location":"scenarios/vagrantfile/","text":"Vagrantfile This file is a simple set of instructions built in Ruby that tells QMI how and what to build. This file is used to create the scenario and configure the virtual machine. # -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.require_version = 1.6.2 # Relative path where 'shared-content' can be found sharedContentRelativePath = '../shared-content' require 'json' # Module dependency for custom VM values setup require File.dirname(__FILE__) + '/' + sharedContentRelativePath + '/scripts/custom-setup.rb' # Load scenario data configuration file scenario = JSON.parse(File.read(File.join(File.dirname(__FILE__), 'scenario.json'))) # Overwrite of VM values (cpus, memory) from custom values setup in QMI client vals = CustomSetup.getValues( scenario )[ servers ][0] # Vagrant intialization Vagrant.configure( 2 ) do |config| config.vm.define vals[ name ] config.vm.box = vals[ box ] config.vm.network private_network , ip: vals[ ip ] config.vm.hostname = vals[ name ] config.vm.provider :virtualbox do |v, override| v.name = vals[ name ] v.linked_clone = true # v.customize ['setextradata', :id, 'GUI/ScaleFactor', '1.25'] v.customize [ modifyvm , :id, --memory , vals[ memory ]] v.customize [ modifyvm , :id, --cpus , vals[ cpus ]] v.customize [ modifyvm , :id, --vram , 64] v.customize [ modifyvm , :id, --clipboard , bidirectional ] end # Shared synced folders setup (Host - Guest) config.vm.synced_folder ./files , c:/installation/ config.vm.synced_folder sharedContentRelativePath, c:/shared-content/ # Provision scripts execution config.vm.provision :shell, path: sharedContentRelativePath + /scripts/modules/q-bootstrap.ps1 config.vm.provision :shell, path: ./scripts/provisioner.ps1 end","title":"Vagrantfile"},{"location":"scenarios/vagrantfile/#vagrantfile","text":"This file is a simple set of instructions built in Ruby that tells QMI how and what to build. This file is used to create the scenario and configure the virtual machine. # -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.require_version = 1.6.2 # Relative path where 'shared-content' can be found sharedContentRelativePath = '../shared-content' require 'json' # Module dependency for custom VM values setup require File.dirname(__FILE__) + '/' + sharedContentRelativePath + '/scripts/custom-setup.rb' # Load scenario data configuration file scenario = JSON.parse(File.read(File.join(File.dirname(__FILE__), 'scenario.json'))) # Overwrite of VM values (cpus, memory) from custom values setup in QMI client vals = CustomSetup.getValues( scenario )[ servers ][0] # Vagrant intialization Vagrant.configure( 2 ) do |config| config.vm.define vals[ name ] config.vm.box = vals[ box ] config.vm.network private_network , ip: vals[ ip ] config.vm.hostname = vals[ name ] config.vm.provider :virtualbox do |v, override| v.name = vals[ name ] v.linked_clone = true # v.customize ['setextradata', :id, 'GUI/ScaleFactor', '1.25'] v.customize [ modifyvm , :id, --memory , vals[ memory ]] v.customize [ modifyvm , :id, --cpus , vals[ cpus ]] v.customize [ modifyvm , :id, --vram , 64] v.customize [ modifyvm , :id, --clipboard , bidirectional ] end # Shared synced folders setup (Host - Guest) config.vm.synced_folder ./files , c:/installation/ config.vm.synced_folder sharedContentRelativePath, c:/shared-content/ # Provision scripts execution config.vm.provision :shell, path: sharedContentRelativePath + /scripts/modules/q-bootstrap.ps1 config.vm.provision :shell, path: ./scripts/provisioner.ps1 end","title":"Vagrantfile"},{"location":"vagrant/getting-started/","text":"Getting Started Add the Vagrant box to Vagrant Launch your terminal or PowerShell if using Microsoft Windows Browse to /qlik-base-os/ Find the file Win2k16-virtualbox.box this is the output of building the base image from Packer Enter vagrant box add --name qlik/win2k16 win2k16-virtualbox.box Enter vagrant box list and ensure the qlik/win2k16 box is present This matches the value in the scenario.json file in the scenario folder Update the Qlik Licenses Launch your text editor Open the folder /qmi-scenarios/ Open the file /shared-content/licenses/qlik-license.json Add the Qlik Licenses (at this stage only sense and qlikview are functional) { sense : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , organization : ENTER_YOUR_ORG_NAME_HERE , lef : QLIKSENSE_LEF_STRING_GOES_HERE }, qap : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , organization : ENTER_YOUR_ORG_NAME_HERE }, qlikview : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , organization : ENTER_YOUR_ORG_NAME_HERE }, datamarket : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , termsAcceptance : {}, organization : ENTER_YOUR_ORG_NAME_HERE , lef : DATAMARKET_LEF_STRING_GOES_HERE } } Qlik Version The version of Qlik that is installed with the scenario is determined by the default-qlik-binary field in scenario.json . This value updates the /shared-content/binaries/qver.json file. Qlik Version Updates The available versions to install are stored within /shared-content/binaries/qBinaryDownload.json. This file needs to have the version and URL in order to download the entered version of Qlik Sense. { qliksense : [ { name : Qlik Sense November 2017 Patch 1 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/1/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense November 2017 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense September 2017 Patch 1 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/1/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense September 2017 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 Patch 3 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/3/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 Patch 2 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/2/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 Patch 1 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/1/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR5 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.5/205/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR4 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.4/204/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR3 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.3/203/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR2 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.2/202/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense February 2018 pre-release , preview : true, url : https://qmi.qlik.com/downloads/installers/Qlik_Sense_setup.exe } ], qlikview : [ { name : QlikView Server November 2017 , url : https://da3hntz84uekx.cloudfront.net/qlikview/12.20/122020100/_MSI/QlikViewServer_x64Setup.exe }, { name : QlikView Server 12.10 SR8 , url : https://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020600/_MSI/QlikViewServer_x64Setup.exe }, { name : QlikView Server 12.10 SR7 , url : https://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020500/_MSI/QlikViewServer_x64Setup.exe }, { name : QlikView Server 11.20 SR17 , url : https://da3hntz84uekx.cloudfront.net/qlikview/11.20/13607/_MSI/QlikViewServer_Win2012andUp.exe } ] }","title":"Getting Started"},{"location":"vagrant/getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"vagrant/getting-started/#add-the-vagrant-box-to-vagrant","text":"Launch your terminal or PowerShell if using Microsoft Windows Browse to /qlik-base-os/ Find the file Win2k16-virtualbox.box this is the output of building the base image from Packer Enter vagrant box add --name qlik/win2k16 win2k16-virtualbox.box Enter vagrant box list and ensure the qlik/win2k16 box is present This matches the value in the scenario.json file in the scenario folder","title":"Add the Vagrant box to Vagrant"},{"location":"vagrant/getting-started/#update-the-qlik-licenses","text":"Launch your text editor Open the folder /qmi-scenarios/ Open the file /shared-content/licenses/qlik-license.json Add the Qlik Licenses (at this stage only sense and qlikview are functional) { sense : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , organization : ENTER_YOUR_ORG_NAME_HERE , lef : QLIKSENSE_LEF_STRING_GOES_HERE }, qap : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , organization : ENTER_YOUR_ORG_NAME_HERE }, qlikview : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , organization : ENTER_YOUR_ORG_NAME_HERE }, datamarket : { name : ENTER_NAME_HERE , control : ENTER_CONTROL_CODE_HERE , serial : ENTER_SERIAL_CODE_HERE , termsAcceptance : {}, organization : ENTER_YOUR_ORG_NAME_HERE , lef : DATAMARKET_LEF_STRING_GOES_HERE } }","title":"Update the Qlik Licenses"},{"location":"vagrant/getting-started/#qlik-version","text":"The version of Qlik that is installed with the scenario is determined by the default-qlik-binary field in scenario.json . This value updates the /shared-content/binaries/qver.json file.","title":"Qlik Version"},{"location":"vagrant/getting-started/#qlik-version-updates","text":"The available versions to install are stored within /shared-content/binaries/qBinaryDownload.json. This file needs to have the version and URL in order to download the entered version of Qlik Sense. { qliksense : [ { name : Qlik Sense November 2017 Patch 1 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/1/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense November 2017 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.24/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense September 2017 Patch 1 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/1/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense September 2017 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.14/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 Patch 3 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/3/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 Patch 2 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/2/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 Patch 1 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/1/_MSI/Qlik_Sense_update.exe , url2 : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense June 2017 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/11.11/0/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR5 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.5/205/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR4 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.4/204/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR3 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.3/203/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense 3.2 SR2 , url : https://da3hntz84uekx.cloudfront.net/QlikSense/3.2.2/202/_MSI/Qlik_Sense_setup.exe }, { name : Qlik Sense February 2018 pre-release , preview : true, url : https://qmi.qlik.com/downloads/installers/Qlik_Sense_setup.exe } ], qlikview : [ { name : QlikView Server November 2017 , url : https://da3hntz84uekx.cloudfront.net/qlikview/12.20/122020100/_MSI/QlikViewServer_x64Setup.exe }, { name : QlikView Server 12.10 SR8 , url : https://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020600/_MSI/QlikViewServer_x64Setup.exe }, { name : QlikView Server 12.10 SR7 , url : https://da3hntz84uekx.cloudfront.net/qlikview/12.10/121020500/_MSI/QlikViewServer_x64Setup.exe }, { name : QlikView Server 11.20 SR17 , url : https://da3hntz84uekx.cloudfront.net/qlikview/11.20/13607/_MSI/QlikViewServer_Win2012andUp.exe } ] }","title":"Qlik Version Updates"},{"location":"vagrant/introduction/","text":"What is Vagrant Vagrant is a tool for building and managing virtual machine environments in a single workflow. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases production parity, and makes the \"works on my machine\" excuse a relic of the past. What you will need Vagrant = 2.1.1 A built Vagrant Box Building the image A decent text editor Some knowledge about Packer, JSON and PowerShell","title":"What is Vagrant"},{"location":"vagrant/introduction/#what-is-vagrant","text":"Vagrant is a tool for building and managing virtual machine environments in a single workflow. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases production parity, and makes the \"works on my machine\" excuse a relic of the past.","title":"What is Vagrant"},{"location":"vagrant/introduction/#what-you-will-need","text":"Vagrant = 2.1.1 A built Vagrant Box Building the image A decent text editor Some knowledge about Packer, JSON and PowerShell","title":"What you will need"},{"location":"vagrant/launch-scenario/","text":"Launching a scenario Open your terminal or PowerShell if using Microsoft Windows Browse to the scenario you want to start (eg. /qmi-scenarios/qmi-qs-sn) Enter vagrant up Watch the progress (depending on machine this process should take approximately 10 minutes) Check for any error's or warnings during the provisioning process","title":"Launch Scenario"},{"location":"vagrant/launch-scenario/#launching-a-scenario","text":"Open your terminal or PowerShell if using Microsoft Windows Browse to the scenario you want to start (eg. /qmi-scenarios/qmi-qs-sn) Enter vagrant up Watch the progress (depending on machine this process should take approximately 10 minutes) Check for any error's or warnings during the provisioning process","title":"Launching a scenario"}]}